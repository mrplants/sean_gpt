apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -h localhost -p {{ .Values.postgres.port }} -U $API_DB_USER -d $DATABASE_NAME
          initialDelaySeconds: 10
          periodSeconds: 5
        image: {{ .Values.postgres.image }}
        env:
        - name: PGDATA
          value: /data/pgdata
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: sean-gpt-secrets
              key: postgres_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sean-gpt-secrets
              key: postgres_password
        - name: API_DB_USER
          valueFrom:
            secretKeyRef:
              name: sean-gpt-secrets
              key: api_db_user
        - name: API_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sean-gpt-secrets
              key: api_db_password
        - name: DATABASE_NAME
          value: {{ .Values.env.database.name }}
        volumeMounts:
        - name: postgres-volume
          mountPath: /data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init-script
  volumeClaimTemplates:
  - metadata:
      name: postgres-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.postgres.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  clusterIP: None
  selector:
    app: postgres
  ports:
    - port: {{ .Values.postgres.port }}
      targetPort: {{ .Values.postgres.port }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
data:
  init.sh: |
{{ .Files.Get "files/postgres_init.sh" | indent 4}}