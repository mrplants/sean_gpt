name: Create a Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write

jobs:
  release-publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Extract Version from pyproject.toml
        id: extract-version
        uses: ./.github/actions/retrieve_version
        with:
          pyproject-path: 'pyproject.toml'

      - name: Create Tag
        run: |
          version_tag="v${{ steps.extract-version.outputs.version }}"
          git tag $version_tag
          git push origin $version_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Description and Write to File
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            fs.writeFileSync('pr_description.md', pr.data.body);
                  
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract-version.outputs.version }}"
          release_name: "Release v${{ steps.extract-version.outputs.version }}"
          body_path: pr_description.md
          draft: false
          prerelease: false
      
      # Assuming you have built your package and the files are in the 'dist' directory
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This was created by the create-release step
          asset_path: ./dist/sean_gpt-${{ steps.extract-version.outputs.version }}-py3-none-any.whl
          asset_name: sean_gpt-${{ steps.extract-version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/octet-stream
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This was created by the create-release step
          asset_path: ./dist/sean_gpt-${{ steps.extract-version.outputs.version }}.tar.gz
          asset_name: sean_gpt-${{ steps.extract-version.outputs.version }}.tar.gz
          asset_content_type: application/octet-stream
      
      - name: Merge main into development
        run: |
          git fetch origin development
          git checkout development
          git merge origin/main
          git push origin development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  