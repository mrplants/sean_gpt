name: Build Development Branch

on:
  workflow_dispatch:
  push:
    branches:
      - development

permissions:
  contents: write

jobs:
    build-package:
        runs-on: ubuntu-latest
        steps:    
          - name: Checkout Repository
            uses: actions/checkout@v2
            with:
              ref: ${{ github.head_ref }}   
    
          - name: Setup Node.js environment
            uses: actions/setup-node@v2
            with:
              node-version: '18'

          - name: Set up Kubectl
            uses: azure/setup-kubectl@v1

          - name: Setup Python environment
            uses: ./.github/actions/setup
      
          - name: Build Package
            run: poetry build
          
          - name: Create the requirements.txt file
            run: poetry export -f requirements.txt --output dist/requirements.txt
    
          - name: Build the frontend
            run: |
              cd sean_gpt_frontend
              npm install
              npm run build
              cd ..
          
          - name: Configure Kubernetes context
            run: |
              mkdir -p $HOME/.kube
              echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

          - name: Create secrets.yaml file
            run: |
              echo "${{ secrets.SECRETS_YAML }}" | base64 -d > sean_gpt_chart/secrets.yaml

          - name: Login to GitHub Container Registry
            run: echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          - name: Build and push backend Docker image (latest)
            uses: ./.github/actions/build_push_docker
            with:
              image-name: 'sean_gpt_dev'
              tag: 'latest'
              github-token: ${{ secrets.GITHUB_TOKEN }}
              dockerfile: 'Dockerfile.api'

          - name: Build and push frontend Docker image (latest)
            uses: ./.github/actions/build_push_docker
            with:
              image-name: 'sean_gpt_frontend_dev'
              tag: 'latest'
              github-token: ${{ secrets.GITHUB_TOKEN }}
              dockerfile: 'Dockerfile.frontend'
                          
          - name: Deploy to dev endpoint
            run: ./scripts/deploy_dev.sh

          - name: Commit and Push Changes
            run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add .
              git commit -m "[AUTO-COMMIT] Build package for version ${{ steps.extract-version.outputs.version }}"
              git push
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    