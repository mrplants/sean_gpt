name: Deploy to Production

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  packages: write
  contents: write
    
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Get latest release tag
      id: get-latest-release
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
        LATEST_TAG=$(echo $LATEST_RELEASE | jq -r .tag_name)
        echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

    - name: Checkout code at release tag
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.get-latest-release.outputs.tag }}
  
    - name: Configure Kubernetes context
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create secrets.yaml
      run: |
        mkdir -p config/production
        echo "${{ secrets.SECRETS_YAML }}" | base64 -d > config/production/secrets.yaml

    - name: Setup dependencies
      uses: ./.github/actions/setup_dependencies

    - name: Prepare for Deployment
      run: ./scripts/prepare_prod.sh

    - uses: SebRollen/toml-action@v1.0.2
      id: read_toml
      with:
        file: 'pyproject.toml'
        field: 'tool.poetry.version'

    - uses: helmfile/helmfile-action@v1.0.0
      with:
        helmfile-version: 'v0.160.0'
        helm-version: 'v3.13.3'
        helmfile-args: sync --environment prod --set seangpt.api_image.image_tag=${{ steps.read_toml.outputs.value }} --set seangpt.migrate_image.image_tag=${{ steps.read_toml.outputs.value }} --set seangpt.frontend_image.image_tag=${{ steps.read_toml.outputs.value }}
